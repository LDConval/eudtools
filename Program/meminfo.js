/**
 * Note that javascript converts object keys to strings
 * but not in the hexadecimal form
 * so 0x000010 would end up as '16'
 * 
 * also, autogenerated from EUDDB.html. Algorithm obvious. Not suggested to edit manually.
 */
const MemoryDescription = {5241088: 'Contains the string "LastReplay".', 5241100: 'The speed in milliseconds to spend each frame during a replay. The array index is dependant on the game speed.', 5241128: 'Contains the replay commands "show" and "hide" along with function pointers.', 5241160: 'Contains sub-commands and leaderboard values to use in the "/replay show" command.', 5241552: 'Contains the menu index, background index, and menu path.', 5241888: 'Contains the campaign listing info.\nWORD gluHist.tbl index\nWORD mapdata.dat index\nWORD cinematic index\nBYTE race index\nBYTE bonus flag\n', 5242720: '64 entries defining campaign mission prologue/establishing shots\n1 entry defining campaign mission epilogue (hybrids bonus mission)\n\nINT pointer to script filename\nINT mapdata.dat index', 5292032: 'Standard C-Runtime. Generated by Visual C++.', 5317280: 'Pointer to memory location of details of first mission in SC zerg, SC terran, SC protoss, BW zerg, BW terran and BW protoss campaigns\n\nData pointed to:\nhttp://farty1billion.dyndns.org/EUDDB/?pg=entry&id=423', 5317304: 'An index for the currently playing cinematic.', 5317848: '[Simple Data] Contains the value in milliseconds required for each frame. Array index dependant on game speed...', 5317876: 'Contains the time in milliseconds spent each frame. Array index dependent on game speed.', 5317904: 'An array of image functions. The array is officially called sgUpdateFuncs.', 5318048: 'This corresponds to a value in images.dat. The official name for this array is sgDrawFuncs.\n\nStructure:\n+0x0 id\n+0x4 normal draw function pointer\n+0x8 mirror draw function', 5318264: '[Backed By Code] This is the same as Human ID unless you are playing Team Melee. The official name for this is g_ActiveNationID.', 5318268: '[Backed By Code] This is your player ID. The official name for this is g_ActiveHumanID.', 5318272: '[Unsupported] This is your active storm ID, which is different from your player ID. The official name for this is g_ActiveStormID.', 5318276: '[Backed By Code] The official name for this is g_LocalNationID.\n\nP1: 00\nP2: 01\nP3: 02\netc.', 5318280: 'The official name for this is g_LocalHumanID.', 5318284: '[Unsupported] The official name for this is g_LocalStormID.', 5318288: 'Contains string pointers for the file names of all game cinematics.', 5318400: 'Contains 3 bytes "ztp" used when loading race-specific files, like the user HUD for example.', 5318408: 'Contains pointers to a string for each cursor image.', 5318484: '[Unsupported] Contains the index for the cursor used for scrolling.', 5318620: 'Contains pointers to the tileset color cycle data. Array index dependant on tileset.', 5318656: 'Contains function pointers for all trigger actions.', 5323624: '[Supported] Amount of Mouse Scroll Speed. Array index dependent on mouse scroll level (0 to 6).', 5325176: '[Simple Data] Packed list of opcodes/parameters for data requiremens.\n\nFirst u16 is the unit ID for the script, followed by the script. 0x##FF is an opcode, 0x##00 is a parameter, FFFF is the end of the script.', 5326272: 'Simple Data', 5327112: 'Simple Data', 5327432: 'Simple Data', 5328120: 'Simple Data', 5331608: 'Contains function pointers for all trigger conditions.', 5331844: "Weapon damage typa, against each unit size\n\nstruct {\n  int id;\n  int multipliers[4]; // independant = 0, small = 1, medium = 2, large = 3\n} dmgMultiplier;\n\ndmgMultiplier weaponDamageTypes[5]; // Independent, Explosive, Concussive, Normal, Ignore Armor\n\nValues are represented as a fraction of 256, so 256 = 100% damage, 512 = 200% damage, 64 = 25% damage.\n\nThe minimum amount of damage able to be done is 0.5, so a 0 multiplier means any attack will do .5 damage. Independent is the the unit size used for powerups\nsuch as data disc, and hence this is why they take 0.5 damage from each hit and take a long time to kill.\n\nWeapon factor is applied after subtracting unit armor from the weapon's damage.\n\nIndependent damage\n0x515B88  vs independent - 0\n0x515B8C  vs small       - 0\n0x515B90  vs medium      - 0\n0x515B94  vs large       - 0\nExplosive damage\n0x515B9C  vs independent - 0\n0x515BA0  vs small       - 128\n0x515BA4  vs medium      - 192\n0x515BA8  vs large       - 256\nConcussive damage\n0x515BB0  vs independent - 0\n0x515BB4  vs small       - 256\n0x515BB8  vs medium      - 128\n0x515BBC  vs large       - 64\nNormal damage\n0x515BC4  vs independent - 0\n0x515BC8  vs small       - 256\n0x515BCC  vs medium      - 256\n0x515BD0  vs large       - 256\nIgnore armor\n0x515BD8  vs independent - 0\n0x515BDC  vs small       - 256\n0x515BE0  vs medium      - 256\n0x515BE4  vs large       - 256\n", 5343208: '[Backed By Code] +0x00 (EPD -116447)\nNumber of available buttons.\n0 = Button disabled\n\n+0x04 (EPD -116446)\ns_button Address.\n\n+0x08 (EPD -116445)\nUnknown.\n\n0 ~ 227 = Units buttons\n228 ~ 249 = Internal buttons (228 = Blank)', 5346208: '[See Description] Edited by PereC, 2021-06-05\nIn SC:R, 64-bit starcraft ignores this part. You are suggested to use 32-bit starcraft if this part of memory is modified by EUD triggers.\n+0x0: Unit ID\n+0x4: Status Function\n+0x8: Display Function', 5348944: 'Contains function pointers for all mission briefing actions.', 5350016: 'Backed By Code', 5350028: 'Backed By Code', 5350040: 'Backed By Code', 5350052: 'Backed By Code', 5350064: 'Backed By Code', 5350076: 'Backed By Code', 5350088: 'Backed By Code', 5350100: 'Backed By Code', 5360148: '[Simple Data] Randomization seed for the next random number, mask with 0x7FFF0000 for the last returned number.\n\nint getRandomNumber(){\n  lastRandomNumber = lastRandomNumber * 0x15A4E35 + 1;\n  return (lastRandomNumber >> 16) & 0x7FFF;\n}', 5361284: '[Read Only] 1 in single player, 2 in LAN, 5 on battle.net.\n\nDescribed at http://wiki.teamliquid.net/starcraft/LatencyChanger\n\nEditted by PereC, 2021.03.31:\nIn SC:R, the value is always 1000', 5361288: 'Appears to be a duplicate of 0x0051CE84. Not sure which value is the one that is actually used.\n\nEditted by PereC, 2021.03.31:\nIn SC:R, the value is always 1000', 5361292: 'Value : -GetTickCount()\n (about 10ms error)\nUsed for input polling. See .text:004D98D8 for more info. Can be used to detect lagging\nor syncing with game audio.', 5361304: '[Simple Data] Set to 0 to update FoW.\n\nToggle between 0 and 1 in separate trigger cycles to fast update FoW.\n\nWith single frame hypers: (see 0x006509A0)\nSet to 1 to fast update Fog of War.\nSet to 0 to never Fog of War revealed areas. (ie. "war ain\'t what it used to be" cheat)', 5361360: '[Read Only] Pointer to each GRP for each images.dat entry', 5370536: '[Read Only] Pointers to GRP handles for all images.', 5374532: '[Read Only] Pointer to LO? handles for all images.dat entries.', 5378528: '[Read Only] Pointer to LO? handles for all images.dat entries.', 5382524: '[Read Only] Pointer to LO? handles for all images.dat entries.', 5386520: '[Read Only] Pointer to LO? handles for all images.dat entries.', 5390544: 'Simple Data', 5432776: 'Pointer to GRP handles for all images.', 5436776: '[Read Only] The array of images currently processed in the game.', 5761896: '[Read Only] Pointer to the first CImage instance.', 5761904: '[Read Only] Pointer to the last CImage instance.', 5762684: '[Unsupported] The Human ID for each player.llll', 5762716: "[Unsupported] If you are playing as 'asdf' then you will find on that address: 'asdf'", 5762752: '[Unsupported] The Nation ID for each player.', 5762784: '[Backed By Code] A structure for each player containing their HumanID, StormID, Type, Race, Team, and Name.\n+0x00 = HumanID (4 bytes)\n+0x04 = StormID (4 bytes)\n+0x08 = Type (1 byte; 0 = inactive, 1 = computer, 2 = human, 3 = rescuable, 7 = neutral)\n+0x09 = Race (1 byte; 0 = zerg, 1 = terran, 2 = protoss)\n+0x0A = Team (1 byte)\n+0x0B = Name (25 bytes)', 5763220: 'The name of the player that last whispered you (in-game only).', 5763248: "A shared vision filter used for changing the player's vision settings.", 5763252: '[Read Only] A boolean value that specifies if the game is Single or Multi player. The official name for this field is gbMultiPlayerMode.\n0=single\n1=Multi', 5763256: "[Unsupported] An array containing flags for each player's network status.", 5763288: 'A value indicating the maximum size for the command buffer that the network provider allows.', 5763292: '[Unsupported] A handle to the main menu BIN dialog.', 5763312: '[Simple Data] The current amount of minerals the player has.', 5763360: '[Simple Data] The current amount of gas the player has.', 5763408: '[Simple Data] The total gas the player has ever harvested', 5763456: '[Simple Data] The total minerals the player has ever harvested', 5763504: 'Simple Data', 5763508: 'Simple Data', 5763520: 'Simple Data', 5763532: 'Simple Data', 5763536: 'Simple Data', 5763540: '[Simple Data] 2byte Width\n2byte Height\n\nwidth + 65536*height', 5763544: 'Simple Data', 5763546: '[Simple Data] Should be within the previous entry', 5763548: '[Simple Data] The current tileset ID being used.\n\nChanging to 1 will turn null terrain into Space with stars (Space platform tileset)', 5763550: 'Simple Data', 5763552: 'Simple Data', 5763553: '[Simple Data] The number of active players in the game.', 5763554: '[Simple Data] A value indicating which console GUI should be displayed.\n\n0 = zerg\n1 = terran\n2 = protoss', 5763555: 'Simple Data', 5763556: 'Simple Data', 5763560: 'Simple Data', 5763564: '[Simple Data] The shared vision values for each player.\n\nStarCraft does not draw vision for players 9-12, but they can see players that have visioned with them and players can detect units they have shared vision with..', 5763612: "[Simple Data] A mapping of the player's colors.", 5763644: '[Simple Data] The elapsed game time (in game ticks, ~42ms per tick on fastest).', 5763648: 'Simple Data', 5763652: '[Simple Data] A value indicating which campaign is being played.', 5763654: '[Simple Data] The name of the next scenario, set using the Set Next Scenario trigger.', 5763686: 'Simple Data', 5763687: 'Simple Data', 5763695: 'Simple Data', 5763696: '[Simple Data] Pos 1: -11325\nX + 65536*Y\n\nPos 2: -11324\nX + 65536*Y\n\nPos 3: -11323\nX + 65536*Y', 5763708: '[Simple Data] 1 row of 228 bytes, 1 per unit, per player\n\noffset + (Cp * 228) + 100', 5766444: 'Simple Data', 5766452: '[Simple Data] A POINT structure containing the position of the last event that occured (spacebar).\n\nPlayerID + 1 for Y position', 5766460: "[Simple Data] The current map's file name.", 5766720: "[Simple Data] The current map's title.", 5766752: "[Simple Data] Purpose\n\n\nTo detect the hotkey and then the slot that a unit is stored in and/or the unit\n\nthat is stored in a slot within a hotkey for any player.\n\n\nMath\n\n\nThe total amount of units that can be hotkeyed\nis 12.\n\nThere are 9 hotkeys in existence.\n\n12 * 9 = 108\n\n108 is the total amount of EPD values for each\nplayer.\n\n\tIf we want to check if there's a unit in the\n\tseventh slot within the hotkey CTRL+0 for\n\tPlayer 1,\n\n\t-10561 + 7 = -10555.\n\n\tIf we want to check if there's a unit in the\n\tfirst slot within the hotkey CTRL+1 for Player\n\t1,\n\n\t-10561 + 12 = -10550.\n\n\tIf we want to check if there's a unit in\n\tthe first slot within the hotkey CTRL+0 for\n\tPlayer 2,\n\n\t-10561 + 109 = -10452.\n\n12 * 9 * 8 = 864\n\n864 is the total combined number of all players' EPD\nvalue.\n\n\tWe can check any slots within any hotkeys for\n\tany player to detect if any unit exist.\n\n\t\tAt least 1\n\n\tWe can check any slots within any hotkeys for\n\tany player to detect if no unit exist.\n\n\t\tAt least 3749\n\n\tbut what if we want to detect if a specific unit\n\twithin the map is hotkeyed in a certain slot?\n\nUnit alpha ID (Unit Entity)\n\nIndex #        Alpha ID\n0\t       2049\n1\t       3748 [+1700]\n2\t       3747 [-1]\n3\t       3746 [-1]\n\nConfused? Hint: http://www.staredit.net/topic/14226/ (Read Section 6)\n\n^^^^^^^Parts of this seem to be wrong.\n\nThis is the magic formula:\nwith the variables\n\np = player number (starting at 0 up to 7)\nh = hotkey number\ni = index in a hotkey (starting at 0 up to 11)\nu = unit id\n\nthen if player p has unit u hotkeyed in index i of hotkey h, we have, for u > 0\nmemory(-10561+(p*216)+(h*12)+i) == 3749 - u,\nand for u = 0,\nmemory(-10561+(p*216)+(h*12)+i) == 2049.\n\n==============\nEdited by PereC, 2021.06.25:\nEach u32 stores the Alpha ID of a hotkeyed unit:\nStarting from 0x57FE60: All the hotkeyed unit of P1\n0x57FE60: Alpha ID of the 1st unit in P1 hotkey 0\n0x57FE64: Alpha ID of the 2nd unit in P1 hotkey 0\n0x57FE68: Alpha ID of the 3rd unit in P1 hotkey 0\n...\n0x57FE60 + 4 * 11: Alpha ID of the 12th unit in P1 hotkey 0\n0x57FE60 + 4 * 12: Alpha ID of the 1st unit in P1 hotkey 1\n0x57FE60 + 4 * 13: Alpha ID of the 2nd unit in P1 hotkey 1\n...\n0x57FE60 + 4 * 119: Alpha ID of the 12th unit in P1 hotkey 9\nFrom 0x57FE60 + 4 * 120 to 0x57FE60 + 4 * 216: ??????\n-----------\nStarting from 0x57FE60 + 216: All the hotkeyed unit of P2\n-----------\nStarting from 0x57FE60 + 216 * 2: All the hotkeyed unit of P3\n-----------\n...\n-----------\nStarting from 0x57FE60 + 216 * 7: All the hotkeyed unit of P8\n-----------\n\nPersonally I don't know why there are 864 bytes for each player. Intuitively there should be 4 * 12 * 10 = 480 bytes for each player, cuz there are 10 hotkeys and 12 units within a hotkey.", 5773664: 'Simple Data', 5774688: '[Simple Data] Controls who you chat with when pressing Enter. (To Allies: hello)\n\n0 = Player0\n1 = Player1\n2 = Player2\n3 = Player3\n4 = Player4\n5 = Player5\n6 = Player6\n7 = Player7\n8 = All\n9 = Allies', 5774689: 'Simple Data', 5774690: 'Simple Data', 5774698: '[Simple Data] Each byte sets the color of the selection circle:\n000 - Green\n001 - Yellow\n002 - Red\n017 - Grey Blue*\n136 - Light Grey*\n138 - Dark Grey*\nHigher values can give different colors (most give solid black.) Asterisk colors are inconsistent.\n\np1 = -8575 with mask 0x00FF0000\np2 = -8575 with mask 0xFF000000\np3 = -8574 with mask 0x000000FF\np4 = -8574 with mask 0x0000FF00\np5 = -8574 with mask 0x00FF0000\np6 = -8574 with mask 0xFF000000\np7 = -8573 with mask 0x000000FF\np8 = -8573 with mask 0x0000FF00\np9 = -8573 with mask 0x00FF0000\np10 = -8573 with mask 0xFF000000\np11 = -8572 with mask 0x000000FF\np12 = -8572 with mask 0x0000FF00', 5774710: '[Simple Data] Each byte corresponds to a palette index used for each player color.\n(The low values for the starting address is the selection circle color for players 11 and 12. Usually 0x0101 ... See that address for details.)', 5774806: "[Simple Data] Each byte references a palette index.\nThis table is immediately after the unit color table, so the low value is the last 2 bytes of Player 12's unit color.", 5774818: 'Simple Data', 5774820: '[Simple Data] Appears to be flipped; units owned, and not produced.', 5774868: '[Simple Data] Appears to be flipped; units owned, and not produced.', 5774916: '[Simple Data] Appears to be flipped; to be units produced, and not owned.', 5774964: '[Simple Data] Deaths for "Any Unit" stored here.', 5775012: '[Simple Data] Kills for "Any Unit" stored here.', 5775060: 'Simple Data', 5775108: 'Simple Data', 5775156: 'Simple Data', 5775204: 'Simple Data', 5775252: 'Simple Data', 5775300: '[Simple Data] Deaths for "Buildings" stored here.', 5775348: '[Simple Data] Kills for "Buildings" stored here.', 5775396: '[Simple Data] Score for "Buildings", or buildings produced.', 5775444: '[Simple Data] Score for "Razings", or buildings killed.', 5775492: 'Simple Data', 5775540: 'Simple Data', 5775588: '[Simple Data] Deaths for "Factories" stored here.', 5775636: '[Simple Data] Kills for "Factories" stored here.', 5775684: '[Simple Data] 4 bytes per player\n\nDespite being 4 bytes, the game will only display it as uint16 and will wrap around after 65536.', 5775732: '[Simple Data] 4 bytes per player\n\nDespite being 4 bytes, the game will only display it as uint16 and will wrap around after 65536.', 5775780: '[Simple Data] 4 bytes per player\n\nDespite being 4 bytes, the game will only display it as uint16 and will wrap around after 65536.', 5775828: '[Simple Data] 4 bytes per player\n\nDespite being 4 bytes, the game will only display it as uint16 and will wrap around after 65536.', 5775876: '[Simple Data] 4 bytes per player\n\nDespite being 4 bytes, the game will only display it as uint16 and will wrap around after 65536.', 5775924: '[Simple Data] 4 bytes per player\n\nDespite being 4 bytes, the game will only display it as uint16 and will wrap around after 65536.', 5775972: '[Simple Data] 4 bytes per player\n\nDespite being 4 bytes, the game will only display it as uint16 and will wrap around after 65536.', 5776020: '[Simple Data] 4 bytes per player\n\nDespite being 4 bytes, the game will only display it as uint16 and will wrap around after 65536.', 5776068: '[Simple Data] 4 bytes per player\n\nDespite being 4 bytes, the game will only display it as uint16 and will wrap around after 65536.', 5776116: 'Simple Data', 5776164: '[Simple Data] Counts per player, per unit\n\n\nFor each unit, 4 bytes per player, for 12 players.\n\noffset + (unit*12 + player) * sizeof(u32)', 5787108: '[Simple Data] Counts per player, per unit\n\nFor each unit, 4 bytes per player, for 12 players.\n\noffset + (unit*12 + player) * sizeof(u32)', 5788788: '(Why does this entry exist? Should be within the Completed Unit Counts Table)\n\nThe amount of larva a hatchery, lair, or hive currently have.', 5798052: '[Simple Data] Counts per player, per unit.\n\nFor each unit, 4 bytes per player, for 12 players.\n\noffset + (unit*12 + player) * sizeof(u32)\n', 5808996: '[Simple Data] Counts per player, per unit\n\nFirst entry in the death table (P1 marine) for 1.16.1.\n\nStructured like\nP1 marine\nP2 marine\n...\nP12 marine\nP1 ghost\nP2 ghost\n...\nP12 ghost\n...\n...\n\nFor each unit, 4 bytes per player, for 12 players.\n\noffset + (unit*12 + player) * sizeof(u32)', 5819940: '[Simple Data] Table layout is reverse compared to deaths/kills table.\n\n1 row per player, 24 bytes per row, 1 byte per tech.\n\nBW techs are elsewhere.\n\nOffset: 24 * Player + Offs\n\nSC Techs:\nID  Offs. Name\n00  +0    Stim Packs\n01  +1    Lockdown\n02  +2    EMP Shockwave\n03  +3    Spider Mines\n04  +4    Scanner Sweep\n05  +5    Tank Siege Mode\n06  +6    Defensive Matrix\n07  +7    Irradiate\n08  +8    Yamato Gun\n09  +9    Cloaking Field\n10  +10   Personnel Cloaking\n11  +11   Burrowing\n12  +12   Infestation\n13  +13   Spawn Broodlings\n14  +14   Dark Swarm\n15  +15   Plague\n16  +16   Consume\n17  +17   Ensnare\n18  +18   Parasite\n19  +19   Psionic Storm\n20  +20   Hallucination\n21  +21   Recall\n22  +22   Stasis Field\n23  +23   Archon Warp', 5820228: '[Simple Data] [See SC Technologies Available]\nhttp://farty1billion.dyndns.org/EUDdb/?pg=entry&id=410', 5820516: '[Simple Data] Who knows', 5820552: '[Simple Data] Table layout is reverse compared to deaths/kills table.\n\n1 row per player, 46 bytes per row, 1 byte per upgrade.\n\nBW upgrades are elsewhere.\n\nOffset: 46 * Player + Offs\n\nSC Upgrades:\nID Offs. Name\n00 +0 Terran Infantry Armor\n01 +1 Terran Vehicle Plating\n02 +2 Terran Ship Plating\n03 +3 Zerg Carapace\n04 +4 Zerg Flyer Caparace\n05 +5 Protoss Armor\n06 +6 Protoss Plating\n07 +7 Terran Infantry Weapons\n08 +8 Terran Vehicle Weapons\n09 +9 Terran Ship Weapons\n10 +10 Zerg Melee Attacks\n11 +11 Zerg Missile Attacks\n12 +12 Zerg Flyer Attacks\n13 +13 Protoss Ground Weapons\n14 +14 Protoss Air Weapons\n15 +15 Protoss Plasma Shields\n16 +16 U-238 Shells\n17 +17 Ion Thrusters\n18 +18 Burst Lasers (Unused)\n19 +19 Titan Reactor (SV +50)\n20 +20 Ocular Implants\n21 +21 Moebius Reactor (Ghost +50)\n22 +22 Apollo Reactor (Wraith +50)\n23 +23 Colossus Reactor (BC +50)\n24 +24 Ventral Sacs\n25 +25 Antennae\n26 +26 Pneumatized Carapace\n27 +27 Metabolic Boost\n28 +28 Adrenal Glands\n29 +29 Muscular Augments\n30 +30 Grooved Spines\n31 +31 Gamete Meiosis (Queen +50)\n32 +32 Metasynaptic Node (Defiler +50)\n33 +33 Singularity Charge\n34 +34 Leg Enhancements\n35 +35 Scarab Damage\n36 +36 Reaver Capacity\n37 +37 Gravitic Drive\n38 +38 Sensor Array\n39 +39 Gravitic Boosters\n40 +40 Khaydarin Amulet (HT +50)\n41 +41 Apial Sensors\n42 +42 Gravitic Thrusters\n43 +43 Carrier Capacity\n44 +44 Khaydarin Core (Arbiter +50)\n45 +45 Unknown Upgrade45', 5821104: '[Simple Data] Table layout is reverse compared to deaths/kills table.\n\n1 row per player, 46 bytes per row, 1 byte per upgrade.\n\nBW upgrades are elsewhere.\n\nOffset: 46 * Player + Offs\n\nSC Upgrades:\nID Offs. Name\n00 +0 Terran Infantry Armor\n01 +1 Terran Vehicle Plating\n02 +2 Terran Ship Plating\n03 +3 Zerg Carapace\n04 +4 Zerg Flyer Caparace\n05 +5 Protoss Armor\n06 +6 Protoss Plating\n07 +7 Terran Infantry Weapons\n08 +8 Terran Vehicle Weapons\n09 +9 Terran Ship Weapons\n10 +10 Zerg Melee Attacks\n11 +11 Zerg Missile Attacks\n12 +12 Zerg Flyer Attacks\n13 +13 Protoss Ground Weapons\n14 +14 Protoss Air Weapons\n15 +15 Protoss Plasma Shields\n16 +16 U-238 Shells\n17 +17 Ion Thrusters\n18 +18 Burst Lasers (Unused)\n19 +19 Titan Reactor (SV +50)\n20 +20 Ocular Implants\n21 +21 Moebius Reactor (Ghost +50)\n22 +22 Apollo Reactor (Wraith +50)\n23 +23 Colossus Reactor (BC +50)\n24 +24 Ventral Sacs\n25 +25 Antennae\n26 +26 Pneumatized Carapace\n27 +27 Metabolic Boost\n28 +28 Adrenal Glands\n29 +29 Muscular Augments\n30 +30 Grooved Spines\n31 +31 Gamete Meiosis (Queen +50)\n32 +32 Metasynaptic Node (Defiler +50)\n33 +33 Singularity Charge\n34 +34 Leg Enhancements\n35 +35 Scarab Damage\n36 +36 Reaver Capacity\n37 +37 Gravitic Drive\n38 +38 Sensor Array\n39 +39 Gravitic Boosters\n40 +40 Khaydarin Amulet (HT +50)\n41 +41 Apial Sensors\n42 +42 Gravitic Thrusters\n43 +43 Carrier Capacity\n44 +44 Khaydarin Core (Arbiter +50)\n45 +45 Unknown Upgrade45', 5821656: '[Simple Data] Who knows', 5821728: '[Simple Data] Who knows', 5821872: "[Simple Data] 8 bytes: 1 byte for each active player, specifying\nwhich of the 4 forces (0-based) that the player's\non:\n\tEPD 3219\n\tPlayer 1: 0x0058D5B0\n\tPlayer 2: 0x0058D5B1 force*256\n\tPlayer 3: 0x0058D5B2 force*65536\n\tPlayer 4: 0x0058D5B3 force*16777216\n\tEPD 3220\n\tPlayer 5: 0x0058D5B4\n\tPlayer 6: 0x0058D5B5 force*256\n\tPlayer 7: 0x0058D5B6 force*65536\n\tPlayer 8: 0x0058D5B7 force*16777216\n\neach force have a multipler value to differentiate\nthemselves from one another:\n\tForce 1\n\tForce 2 (*2 to Player)\n\tForce 3 (*3 to Player)\n\tForce 4 (*4 to Player)\n\nforce flags\nforce names\nPLAYER'S FORCE", 5821880: "[Simple Data] 4 bytes: 1 byte for each force specifying the flags;\n\tforce 1: 0x0058D5B8\n\tforce 2: 0x0058D5B9 bits*256\n\tforce 3: 0x0058D5BA bits*65536\n\tforce 4: 0x0058D5BB bits*16777216\n\n7 bits: 1 bit per flag per force;\n\tbit 0: randomize location (+1 to byte)\n\tbit 1: ally (+2 to byte)\n\tbit 2: allied victory (+4 to byte)\n\tbit 3: shared vision (+8 to byte)\n\tbit 4: unknown/unused (+16 to byte)\n\tbit 5: unknown/unused (+32 to byte)\n\tbit 6: unknown/unused (+64 to byte)\n\tbit 7: unknown/unused (+128 to byte)\n\nEPD 3221: read not one byte, but all four bytes\nand 12 bits\n\nFORCE FLAGS\nforce names\nplayer's force", 5821884: "[Simple Data] 4 byte integers: 1 integer for each force, string\nnumber of the name per force:\n\tforce 1: 0x0058D5BC (EPD 3222)\n\tforce 2: 0x0058D5DC (EPD 3230)\n\tforce 3: 0x0058D5F8 (EPD 3237)\n\tforce 4: 0x0058D614 (EPD 3244)\n\nuntested: even forces strip two characters from\nthe start of the force name\n\nadvice: use [EUD] Text to Value converter\n\nforce flags\nFORCE NAMES\nplayer's force", 5822004: "[Simple Data] EPD 3252\n+ 0x00: P1 ally status to P1\n+ 0x01: P1 ally status to P2 (*256).\n+ 0x02: P1 ally status to P3 (*65536).\n+ 0x03: P1 ally status to P4 (*16777216).\nEPD 3253\n+ 0x04: P1 ally status to P5.\n+ 0x05: P1 ally status to P6 (*256).\n+ 0x06: P1 ally status to P7 (*65536).\n+ 0x07: P1 ally status to P8 (*16777216).\nEPD 3254\nP1 ally status to P9-P12.\nEPD 3255\n+ 0x0C: P2 ally status to P1.\n+ 0x0D: P2 ally status to P2 (*256).\netc\n\n0x00: Enemy, 0x01: Ally, 0x02: Allied Victory\n\nNote - A player is always allied OR allied victory to themself. I could not confirm through testing if it was just one of them, but in most cases, it's allied. Otherwise assume allied victory instead.", 5822148: "[Simple Data] EPD 3288 (+0x00):\n\nThis is the Mission Objective String ID for Player 1.\n\nTo find the String ID for a Mission Objective:\n\n\t1) Look at Player 1's Mission Objective text.\n\t2) Go into the String Editor of the Map Editor you're using.\n\t3) Find the exact string used in Player 1's Mission Objective text \t\twithin the String Editor.\n\t4) Now count all of the string above it, and add 1 to the total \tnumber.\n\nNote: This does not work if Player 1 does not have any text in his Mission Objective. In fact, the value of the address would be 0.\n\nEPD 3289 (+0x04): This is the Mission Objective String ID for Player 2.\nEPD 3290 (+0x08): This is the Mission Objective String ID for Player 3.\nEPD 3291 (+0x0C): This is the Mission Objective String ID for Player 4.\nEPD 3292 (+0x10): This is the Mission Objective String ID for Player 5.\netc", 5822196: "[Simple Data] Changing the value of this address with EUP or EUD is worthwhile, as the timer will not appear graphically and yet count down till zero without any of the players knowing. In other words, this could be used as another death counter for certain events.\n\n[So is this 'Display Countdown Timer' then?]", 5822200: '[Simple Data] Game Seconds (1 Game Second = 16 Game Ticks = ~1072ms on normal speed = ~672ms on fastest speed)\n\nReportedly can be modified to prevent flag beacons from creating flags.', 5822204: '[Simple Data] 32 switches, probably pre-1.04 when number of switches was increased to 256.', 5822208: 'Simple Data', 5822216: 'Simple Data', 5822220: 'Simple Data', 5822221: 'Simple Data', 5822222: 'Simple Data', 5822224: 'Simple Data', 5822228: 'Simple Data', 5822232: '[Simple Data] The base value of this address is: (P1 + P2 + P3 + P4) * 3 = 50529027\n\nPlayer 1: *1\nPlayer 2: *256\nPlayer 3: *65536\nPlayer 4: *16777216\n\nPlayer 1, 2, 3, and 4 all have three remaining game pauses that they can use to stop the game from running temporarily. If Player 2 were to pause the game, and have only two remaining game pauses left as a result, the new value of the address is: 50529027 - 256 = 50528771.\n\nThe same as EPD 3310, except:\n\nPlayer 5: *1\nPlayer 6: *256\nPlayer 7: *65536\nPlayer 8: *16777216\n\nChallenge (Try it) - Create a easy formula from all of the information given.', 5822240: '[Simple Data] Point:\nu16 X\nu16 Y\n\nEPD 3311\n+0x00: P1 Start Location (X, Y*65536)\n+0x01: P2 Start Location (X*16777216, Y*256) *256\n+0x02: Unknown (4194352) *65536\n+0x03: Unknown (805322752) *16777216\nEPD 3312\n+0x04: Unknown (3145792)\n+0x05: P3 Start Location (X*16777216, Y*256) *256\n+0x06: Unknown (4194352) *65536\n+0x07: Unknown (805322752) *1677216\nEPD 3313\n+0x08: Unknown (3145792)\n+0x09: P4 Start Location (X*16777216, Y*256) *256\n+0x0A: Unknown (4194352) *65536\n+0x0B: Unknown (805322752) *16777216\nEPD 3314\n+ 0x0C: Unknown (3145792)\n+0x0D: P5 Start Location (X*16777216, Y*256) *256\n+0x0E: Unknown (12582960) *65536\n+0x0F: Unknown (805355520) *16777216\nEPD 3315\n+0x10: Unknown (3145920)\n+0x11: P6 Start Location (X*16777216, Y*256) *256\n+0x12: Unknown (12582960) *65536\n+0x13: Unknown (805355520) *16777216\nEPD 3316\n+0x14: Unknown (3145920)\n+0x15: P7 Start Location (X*16777216, Y*256) *256\n+0x16: Unknown (12582960) *65536\n+0x17: Unknown (805355520) *16777216\nEPD 3317\n+0x18: Unknown (3145920)\n+0x19: P8 Start Location (X*16777216, Y*256) *256\n+0x1A: Unknown (12582960) *65536\n+0x1B: Unknown (805355520) *16777216\n\nBase Value (when start locations are placed top-left of the map)\nPlayer 1: 3145792\nPlayer 2-8: 1073754112\n\nAlready you can tell that all of this is confusing and doesn\'t make a lot of sense on its own, so here\'s a tutorial that will hopefully clear up some things:\n\n1.To check if the position of Player 3\'s Start Location is at the location you placed it at, look at EPD 3312.\n\n2. Look at the X pixel placement of P3 start location in your map editor and\nwrite it down.\n\n3. Look at the Y pixel placement of P3 start location in your map editor\nand write it down.\n\n4. Now plug those numbers into this formula:\nMemory at Death Table + 3312 is exactly (3145792 + (((Start Location X * 16777216) + (Start Location Y * 256)) * 256) + (4194352 * 65536) + (805322752 * 16777216))\n\n3145792, 4194352, and 805322752 are "constants," that you need to know and account for in the equation. Because EPD reads 4 bytes at once (this formula does not work for Player 1 and Player 2 Start Location. If you understood everything that was said so far, then coming up with another formula that\'s specific to those two will be easy).\n\n5. The trigger should work, and if it doesn\'t, then either you have miscalculated or these "unknowns", are not constant.\n\nChallenge - Find out what those unknowns are actually for, and/or create an easier formula than the one I have come up with.', 5822272: '[Simple Data] This Location Table is not used in the Expansion (Brood War)!\n\n+0x00 (EPD 3319)\n\n\tThis is the LEFT position of the location (X1).\n\n+0x04 (EPD 3320)\n\n\tThis is the TOP position of the location (Y1).\n\n+0x08 (EPD 3321)\n\n\tThis is the RIGHT position of the location (X2).\n\n+0x0C (EPD 3322)\n\n\tThis is the BOTTOM position of the location (Y2).\n\n+0x10 (EPD 3323)\n\nString ID:\n\t1) Look in the String Editor of the Map Editor you\'re using\n\t2) Find the name of the location within it\n\t3) Now count all the strings that are above it, and add 1 to the total number.\n\t4) The number you came to is the String ID for that location\n\nFlags (Affect Layers):\n\tLow Ground: 65536\n\tMed Ground: 131072\n\tHigh Ground: 262144\n\tLow Air: 524288\n\tMed Air: 1048576\n\tHigh Air: 2097152\n\nWhen all flags are enabled, the value\nof the address is: 4128768 + String ID\n\nWhen all flags are disabled, the value\nof the address is: String ID\n\nNote: the 64th location is "Anywhere."', 5823552: '[Simple Data] +0x00 (EPD 3639)\n\tSwitch 1: *1\n\tSwitch 2: *2\n\tSwitch 3: *4\n\tSwitch 4: *8\n\tSwitch 5: *16\n\tSwitch 6: *32\n\tSwitch 7: *64\n\tSwitch 8: *128\n\t...\n\tSwitch 32: *2147483648\n\nWhen none of the switches from 1 to 32\nare set, the value of the address is: 0\n\nWhen only switch 8 is set, the value of the\naddress is: 128.\n\nWhen only switch 2 and switch 8 are set,\nthe value of the address is: 2 + 128 = 130.\n\n+0x04 (EPD 3640): Switch 33-64\n+0x08 (EPD 3641): Switch 65-96\n+0x0C (EPD 3642): Switch 97-128\n+0x10 (EPD 3643): Switch 129-160\n+0x14 (EPD 3644): Switch 161-192\n+0x18 (EPD 3645): Switch 193-224\n+0x1C (EPD 3646): Switch 225-256', 5823584: '[Simple Data] +0x00 (EPD 3647)\n\n\tThis is the LEFT position of the location (X1).\n\n+0x04 (EPD 3648)\n\n\tThis is the TOP position of the location (Y1).\n\n+0x08 (EPD 3649)\n\n\tThis is the RIGHT position of the location (X2).\n\n+0x0C (EPD 3650)\n\n\tThis is the BOTTOM position of the location (Y2).\n\n+0x10 (EPD 3651)\n\nString ID:\n\t1) Look in the String Editor of the Map Editor you\'re using\n\t2) Find the name of the location within it\n\t3) Now count all the strings that are above it, and add 1 to the total number.\n\t4) The number you came to is the String ID for that location\n\nFlags (Affect Layers):\n\tLow Ground: 65536\n\tMed Ground: 131072\n\tHigh Ground: 262144\n\tLow Air: 524288\n\tMed Air: 1048576\n\tHigh Air: 2097152\n\nWhen all flags are enabled, the value\nof the address is: 4128768 + String ID\n\nWhen all flags are disabled, the value\nof the address is: String ID\n\nNote: the 64th (1-based) location is "Anywhere."', 5828684: '[Simple Data] If FALSE, the value of the address is 0, and the countdown timer is not paused.\nif TRUE, the value of the address is greater than 0, and the countdown timer is paused.', 5828688: '[Simple Data] Table layout is reverse compared to deaths/kills table.\n\n1 row per player, 20 bytes per row, 1 byte per tech.', 5828928: '[Simple Data] Table layout is reverse compared to deaths/kills table.\n\n1 row per player, 20 bytes per row, 1 byte per tech.', 5829168: '[SCR: Simple data]\n\nWho knows', 5829240: '[Simple Data] Table layout is reverse compared to deaths/kills table.\n\n1 row per player, 15 bytes per row, 1 byte per upgrade.', 5829420: '[Simple Data] Table layout is reverse compared to deaths/kills table.\n\n1 row per player, 46 bytes per row, 1 byte per upgrade.\n\n*****ALL BW upgrades addresses generated automatically in Eud Editor 2 0.17.9.7 are wrong*****\n*****Please follow contents below*****\n\nOffset: 15 * Player + Offs\n\nBW Upgrades:\nID Offs. Name\n00 +0 unknown upgrade46\n01 +1 argus jewel (corsair +50)\n02 +2 unknown upgrade48\n03 +3 arugs talisman (DA +50)\n04 +4 unknown upgrade50\n05 +5 caduceus reactor (medic +50)\n06 +6 chitinous plating\n07 +7 anabolic synthesis\n08 +8 charon booster\n09 +9 unknown upgrade55\n10 +10 unknown upgrade56\n11 +11 unknown upgrade57\n12 +12 unknown upgrade58\n13 +13 unknown upgrade59\n14 +14 unknown upgrade60\n', 5829600: '[Simple Data] Who knows', 5829696: '[Simple Data] 1 if your game is using the Expansion set.', 5829697: 'Simple Data', 5829698: 'Simple Data', 5829706: 'Simple Data', 5859488: 'A list of functions that determine how user input is handled.', 5859500: "Detects the left click of a mouse.\n\nUse only actions that won't desync (check the Reference).", 5859588: "[Unsupported] Determines the game's mode. In-Game, in-menu, battle.net, etc. The official name is gwGameMode.", 5859864: '[Backed By Code] An array containing the state of all the virtual key codes (VK_).', 5870532: 'Backed By Code', 5870548: '[Backed By Code] Pointer\ndefault: first string', 5880412: 'Subtype ID specified in GOT template.\n\nTop Vs. Bottom: Number is the number of players on top (1 = "1 vs #", 2 = "2 vs #", etc.)\nGreed: 1=2500, 2=5000, 3=7500, 4=10000\nSlaughter: 1=15, 2=30, 3=45, 4=60\nTeam Melee/FFA/CTF: 1=2 teams, 2=3 teams, 3=4 teams', 5881984: 'Mapdata.tbl string index', 5885048: '[Simple Data] Last GetTickCount Win32 API Time for Drop Window shown.\n\nWhenever a player disconnects, StarCraft will display drop window.\nIf 2 minutes elapsed since last drop window showed, StarCraft will reset the drop timer to 45 seconds.', 5885056: '[Simple Data] The time remaining before a player is dropped.\n\nSee the address 0x59CC78 (Last Time of Drop Window) for application.', 5885096: 'Supported', 5885100: 'Supported', 5885104: '[Supported] Amount of HP that a unit currently has.\n\nValue displayed in-game is divided by 256.  For example, a Marine that has 40 HP in-game would have 10240 or 0x2800 HP in memory.\n\nOffset from unit index address: 0x08\nUnit Index 0 HP = 0x0059CCA8 + 0x08 = 0x0059CCB0\nUnit Index 1 HP = 0x00628298 + 0x08 = 0x006282A0\nUnit Index 2 HP = 0x00628148 + 0x08 = 0x00628150\n\nExample: Regenerate HP for unit at index 2 to a max of 100 HP\n\nUnit Index 2 HP = 0x00628148 + 0x08 = 0x00628150\n\nTrigger("Player 1"){\nConditions:\n  // HP is less than 100\n  MemoryAddr(0x628150, At most, 25599);\n\nActions:\n  // Add 16/256 HP\n  MemoryAddr(0x628150, Add, 16);\n  Preserve Trigger();\n}\n\n//-----------------------------------------------------------------//\n\nTrigger("Player 1"){\nConditions:\n  // HP is over 100\n  MemoryAddr(0x628150, At least, 25601);\n\nActions:\n  // Set to 100 HP\n  MemoryAddr(0x628150, Set To, 25600);\n  Preserve Trigger();\n}', 5885108: '[Supported] Pointer to CSprite. Contains the graphics of the unit.', 5885112: '[Supported] X + 65536*Y', 5885116: '[Supported] CUnit target pointer', 5885120: "[Unsupported] 0x0000FFFF x-coord\n0xFFFF0000 y-coord\n\nThe next way point in the path the unit is following to get to its destination. Equal to moveToPos for air units since they don't need to navigate around buildings or other units. (bwapi)", 5885124: '[Unsupported] 0x0000FFFF x-coord\n0xFFFF0000 y-coord\n\nThe desired position (bwapi)\n\n"When this is set to a certain point, a unit will face in the direction of that point while it idles. This has no effect on the unit when it\'s moving. By default, it was on the current position of the Marine. When the unit is attacking another unit, this point is set to the unit\'s target. This is likely used to make a unit face its target when attacking." -Roy', 5885128: '[Supported] Flags that enable/disable certain movement. Need more testing.\n\n0x01 - Ordered at least once\n0x02 - Accelerating\n0x04 - Breaking\n0x08 - Starting attack\n0x10 - Moving\n0x20 - Lifted\n0x40 - Unknown\n0x80 - Always zero', 5885129: '[Supported] 256 directions starting from the top going clockwise.\n0x0000FF00 - *256', 5885130: '[Supported] "The unit flips out when this is frozen on a specific value. It will have difficulty turning, and will usually be seen walking diagonally instead of facing the direction it is actually walking towards." -Roy', 5885131: '[Supported] This usually only differs from the currentDirection field for units that can accelerate and travel in a different direction than they are facing. For example Mutalisks can change the direction they are facing faster than then can change the direction they are moving.', 5885132: '[Supported] The Flingy ID of the unit.', 5885135: '[Supported] The type of movement that the unit use (*16777216).', 5885136: '[Supported] The coordinates of a unit on the map (X + 65536*Y).', 5885140: '[Supported] The X coordinate of a unit on the map (*256).', 5885144: '[Supported] The Y coordinate of a unit on the map (*256).', 5885148: 'Supported', 5885152: '[Supported] CUnit.current_speed1\n\nRelated to turning and from observations, it is apparent that this is similar (or the same) to the move speed of a unit.', 5885156: '[Supported] CUnit.current_speed2\n\nThe speed that the unit is currently moving at. An example of this in use would be to tell the difference between a marine that is using Stim Packs and a marine that is not using Stim Packs.', 5885160: '[Supported] CUnit.current_speed.x\n\nThe speed that the unit is currently moving at on the X-Axis (Left = Negative, Right = Positive). An example of this would be to detect if a unit is absolutely moving towards the right (not diagonally).', 5885164: '[Supported] CUnit.current_speed.y\n\nThe speed that the unit is currently moving at on the Y-Axis (Up = Negative, Down = Positive). An example of this in use would be to tell if a unit is going absolutely down (not diagonally).', 5885168: 'Supported', 5885170: 'Supported', 5885171: '[Supported] The direction a unit is currently facing (*16777216).\n\nUp\nLeast 0\nMost 16777215\nUp-Right\nLeast 536870912\nMost 553648127\nRight\nLeast 1073741824\nMost 1090519039\nDown-Right\nLeast 1610612736\nMost 1627389951\nDown\nLeast 2147483648\nMost 2164260863\nDown-Left\nLeast 2684354560\nMost 2701131775\nLeft\nLeast 3221225472\nMost 3238002687\nUp-Left\nLeast 3758096384\nMost 3774873599', 5885172: '[Supported] The owner of the cunit.\n\nMask: 0x000000FF *1\n\nP1: 00\nP2: 01\nP3: 02\netc.', 5885173: '[Supported] Specification of type of order given. See http://www.staredit.net/wiki/index.php?title=Orders.dat_Entry_Listing\n\nMask: 0x0000FF00 *256', 5885174: "[Supported] Additional order (*65536) information. More extensive testing is necessary.\n\nBWAPI doc:\n0x01  Moving/Following Order\n0x02  No collide (Larva)?\n0x04  Harvesting? Working?\n0x08  Constructing Stationary\nNote: I don't actually think these are flags", 5885175: '[Supported] Additional order (*16777216) information. Set by iscript.\n\nBWAPI doc:\n0x01  Update building graphic/state\n0x02  Casting spell\n0x04  Reset collision? Always enabled for hallucination...\n0x10  Lift/Land state\n\nPotential Link: https://github.com/bwapi/bwapi/blob/master/Documentation/dox/orders.dox', 5885176: '[Supported] 228 = none?', 5885177: '(*256) While the unit is specifically following the order to move to an area, the value of this address is 0. When it is not moving, the value appears to randomize itself. When the unit is given an order to attack an area, it switches from randomizing itself to being zero repeatedly with a delay. This might explain why units that are attacking are slower at firing the auto-acquired target once it is in range than it is to patrol towards them instead. Note that a building is always zero.\n\n0x0059CCFA (*65536)\n0x0059CCFB (*16777216)', 5885180: '[Supported] A timer for orders. An example would be the time left before a worker harvest the gas from a mine or transport unloading.', 5885181: '[Supported] The firing rate (or cooldown) for ground weapons (*256).\n0x0059CCFD\n\nThe firing rate (or cooldown) for air weapons (*65536).\n0x0059CCFE\n\nThe casting rate (or cooldown) for spells (*16777216).\n0x0059CCFF', 5885184: '[Supported] The coordinates of an order given to a unit (X + 65536*Y)\n\nAdvice: use a trigger duplicator.\n\nX: *1 Mask: 0x0000FFFF\nY: *65536 Mask: 0xFFFF0000', 5885188: '[Supported] The unit targeted by another unit (Index Pointer).', 5885192: '[Supported] The amount of shield points that a unit have (*256).', 5885196: 'Supported', 5885200: '[Supported] Pointer to previous CUnit owned by the same player', 5885204: '[Supported] Pointer to the next CUnit owned by the same player.', 5885208: "[Supported] Pointer to this unit's subunit CUnit.", 5885212: '(Unsupported?) Pointer to COrder', 5885216: '(Unsupported?)\n\nPointer to COrder.', 5885220: '[Supported] Pointer to CUnit.\n\nThe auto-acquired target (Note: This field is actually used for different targets internally, especially by the AI) (bwapi)', 5885224: '[Supported] Pointer to CUnit.\n\nAddon is connected to building (addon has conntected building, but not in other direction  (officially "pAttached") (bwapi)', 5885228: '[Supported] The number of queued orders a unit currently has.', 5885229: '[Supported] BWAPI doc:\ncounts/cycles down from from 8 to 0 (inclusive). See also [Cycle Counter].', 5885230: '[Supported] Pathing related?', 5885231: 'Supported', 5885232: '(Unsupported?)\n\nStores the type of the unit prior to being morphed/constructed (bwapi)', 5885234: '(Unsupported?)\n\ncountdown that stops being recent when it hits 0 (bwapi)', 5885235: '(Unsupported?\n\n17 = was completed (train, morph), 174 = was attacked (bwapi)', 5885236: 'Supported', 5885238: "[Supported] Adds to unit's base rank. (*65536)", 5885239: '[Supported] The kill count of a unit (*16777216).', 5885240: '[Supported] The player that last attacked this unit', 5885241: 'Supported', 5885242: '[Supported] Internal use by AI only (bwapi)', 5885243: '[Supported] Some flags that change when the user interacts with the unit\n2 = issued an order\n3 = interrupted an order\n4 = self destructing\n(bwapi)', 5885244: '"When this address is frozen and you order a unit to try to walk into water or other invalid terrain, the unit will walk in place when it determines it cannot complete the destination, instead of coming to a full stop." -Roy', 5885246: 'Supported', 5885247: '[Supported] https://github.com/bwapi/bwapi/blob/master/bwapi/BWAPI/Source/BW/Path.h\n// Names are official\nUM_Init          = 0x00,\nUM_InitSeq       = 0x01,\nUM_Lump          = 0x02,\nUM_Turret        = 0x03,\nUM_Bunker        = 0x04,\nUM_BldgTurret    = 0x05,\nUM_Hidden        = 0x06,\nUM_Flyer         = 0x07,\nUM_FakeFlyer     = 0x08,\nUM_AtRest        = 0x09,\nUM_Dormant       = 0x0A,\nUM_AtMoveTarget  = 0x0B,\nUM_CheckIllegal  = 0x0C,\nUM_MoveToLegal   = 0x0D,\nUM_LumpWannabe   = 0x0E,\nUM_FailedPath    = 0x0F,\nUM_RetryPath     = 0x10,\nUM_StartPath     = 0x11,\nUM_UIOrderDelay  = 0x12,\nUM_TurnAndStart  = 0x13,\nUM_FaceTarget    = 0x14,\nUM_NewMoveTarget = 0x15,\nUM_AnotherPath   = 0x16,\nUM_Repath        = 0x17,\nUM_RepathMovers  = 0x18,\nUM_FollowPath    = 0x19,\nUM_ScoutPath     = 0x1A,\nUM_ScoutFree     = 0x1B,\nUM_FixCollision  = 0x1C,\nUM_WaitFree      = 0x1D,\nUM_GetFree       = 0x1E,\nUM_SlidePrep     = 0x1F,\nUM_SlideFree     = 0x20,\nUM_ForceMoveFree = 0x21,\nUM_FixTerrain    = 0x22,\nUM_TerrainSlide  = 0x23', 5885248: "[Supported] Queue of units to build. Note that it doesn't begin with index 0, but with #buildQueueSlot index. (bwapi)", 5885258: '[Supported] Amount of energy a unit has. (value*256) * 65536', 5885260: '[Supported] Index of active unit in #buildQueue. (bwapi)', 5885261: '[Supported] A byte used to determine uniqueness of the unit', 5885262: '[Supported] The order ID for passive orders such as Cloak, Build, ExpandCreep, cloaking field, etc.', 5885263: '[Supported] 0 means the building has the largest amount of fire/blood (bwapi)', 5885264: '[Supported] hp gained on construction or repair (bwapi)', 5885266: '[Supported] Shield gain on construction (bwapi)', 5885268: '[Supported] The remaining time before a building is constructed.', 5885270: "[Supported] The HP of the unit before it changed (example Drone->Hatchery, the Drone's HP will be stored here)", 5885272: "[Unsupported] (Unsupported?)\n\nUnit ID's (not pointers) of loaded units.", 5885288: '[Supported] CUnit pointer to the powerup carried by a worker\n\nAlso:\nVulture - Spider mine count\nCarrier/Reaver - Pointer to first CUnit inside the hangar\nScarab/Interceptor - Pointer to parent\nBeacon - Unknown\nWorker - Powerup CUnit pointer', 5885292: '[Supported] 0x0000FFFF x-coordinate\n0xFFFF0000 y-coordinate\n\nAlso:\nCarrier/Reaver: pointer to first child outside the hangar\nScarab/Interceptor: pointer to previous\nBeacon: Unknown\nBuilding: Addon building type and upgrade/research time', 5885294: 'Supported', 5885296: '[Supported] CUnit pointer\n\nAlso:\nCarrier/Reaver - number of units in hangar\nScarab/Interceptor - pointer to next scarab/interceptor\nBeacon - Flag spawn frame\nBuilding - Tech type/upgrade type/larva timer/landing timer', 5885297: '[Supported] Also:\nCarrier/Reaver - Out hangar count', 5885298: '[Supported] The remaining time left before a larva is created on buildings (*65536).', 5885299: '[Supported] Detects if a Terran building is landing (*16777216).', 5885300: '[Supported] \nAlso:\nScarab/Interceptor - In hangar\nBuilding - Creep timer', 5885301: 'Supported', 5885302: 'Supported', 5885303: 'Supported', 5885304: '[Supported] https://github.com/bwapi/bwapi/blob/master/bwapi/BWAPI/Source/BW/CUnit.h#L227\n\nleft, top, right, bottom ?\n\nAlso:\nResource - Resource count/iscript/queue count\nNydus - Exit unit\nGhost - Nuke dot sprite\nPylon - Power overlay\nNuke Silo - Attached nuke\nPowerup - Origin Coords\nWorker - Harvest target unit', 5885306: '[Supported] Current iscript animation ?', 5885307: '[Supported] as named in bwapi, or "Boolean on whether is extracted-added by jehn" ???', 5885308: '[Supported] \nAlso:\nResource - Next gatherer\nWorker - Previous harvest unit', 5885312: '[Supported] \nAlso:\nResource - Resource group/resource belongs to AI', 5885313: 'Supported', 5885316: '[Supported] https://github.com/bwapi/bwapi/blob/master/bwapi/BWAPI/Source/BW/UnitStatusFlags.h\n0x00000001 - Completed\n0x00000002 - GroundedBuilding (Building on the ground)\n0x00000004 - In Air\n0x00000008 - Disabled (Protoss unpowered)\n0x00000010 - Burrowed\n0x00000020 - In Building\n0x00000040 - In Transport\n0x00000080 - Unknown (Target acquisition)\n0x00000100 - Requires detection\n0x00000200 - Cloaked\n0x00000400 - Doodad State thing\n0x00000800 - Cloaking for free (no energy to cloak)\n0x00001000 - Cannot receive orders\n0x00002000 - NoBrkCodeStart (Iscript)\n0x00004000 - Unknown\n0x00008000 - Cannot Attack (unknown)\n0x00010000 - Is A Unit\n0x00020000 - Is A Building\n0x00040000 - Ignore Tile Collision\n0x00080000 - Unknown\n0x00100000 - Is Normal (set for normal units, not set for hallucinated units)\n0x00200000 - No Collide\n0x00400000 - unknown\n0x00800000 - Is Gathering\n0x01000000 - unknown\n0x02000000 - unknown (turret related)\n0x04000000 - Invincible\n0x08000000 - Holding Position\n0x10000000 - Speed Upgrade\n0x20000000 - Cooldown Upgrade\n0x40000000 - Is Hallucination (set for hallucinated units, not set for normal units)\n0x80000000 - Is Self Destructing (Set for when the unit is self-destructing (scarab, scourge, infested terran))\n\nOffset from CUnit Base: 0xDC (= 0x0059CD84 - 0x0059CCA8)', 5885320: '(Unsupported?)\n\nResource being held by worker:\n1 = gas\n2 = ore\n(bwapi)', 5885321: '(Unsupported?)', 5885322: '(Unsupported?)', 5885323: '(Unsupported?)\n\nCounts down from 15 to 0 when most orders are given, or when the unit moves after reaching a patrol location (bwapi)', 5885324: '(Unsupported?)\n\nFlags specifying which players can detect this unit (cloaked/burrowed) (bwapi)', 5885328: '(Unsupported?)\n\nUnused according to bwapi.\n\n0x0000FFFF x-coord\n0xFFFF0000 y-coord', 5885332: "[Unsupported] The current unit that's being produced from a building. For a better description of what this does, more testing is necessary.", 5885336: '(Unsupported?)\n\nCUnit pointer to previous burrowed unit', 5885340: '(Unsupported?)\n\nPointer to CUnit of next burrowed unit', 5885344: '[Supported] CUnit pointer to previous psi provider\n\nFor other buildings:\nThe coordinates of a rally from a building', 5885348: '[Supported] CUnit pointer to next psi provider\n\nFor other  buildings:\nThe unit that a building set their rally to', 5885352: '(Unsupported?)\n\nPointer to pathing data.', 5885356: '[Supported] Unknown?', 5885357: '[Supported] 0x01 = uses pathing\n0x02 = ?\n0x04 = ?\n(bwapi)', 5885359: '[Supported] Detects if a unit is currently being healed (*16777216).', 5885360: '(Unsupported?)\n\na rect that specifies the closest contour (collision) points (bwapi)\n\ns16 left, s16 top, s16 bottom, s16 right ?', 5885368: '[Supported] When this timer equals 0, the following are destroyed:\n\nhallucinations\nSwarm\nDisruption Web\nBroodlings\n\nCould be more?', 5885370: '[Supported] The amount of damage the matrix has absorbed (*16777216).', 5885372: '[Supported] The amount of time remaining for matrix by a science vessel.', 5885373: '[Supported] The amount of time remaining (*256) for the stim effect applied to a marine or firebat.', 5885374: '[Supported] The amount of time remaining (*65536) to ensure by a queen, infested Kerrigan.\n\nInitialised to 75 (4915200). Timers decay 1 tick per 8 frames, so 75 / 2.9762 = 25.2 RL seconds on Fastest.\n\n75 timer * 8 frame * 0.042 seconds (Which is MS)', 5885375: '[Supported] The amount of time remaining (*16777216) for lockdown by a ghost.\n\nInitialised to 131 (2,197,815,296). Timers decay 1 tick per 8 frames, so 131 / 2.9762 = 44.02 RL seconds on Fastest.', 5885376: '[Supported] The amount of time remaining for irradiate by a science vessel.', 5885377: '[Supported] The amount of time remaining (*256) for stasis by a arbiter.', 5885378: '[Supported] Detects if a unit has been plagued by defiler (*65536)', 5885379: '[Supported] If a unit is under storm (*16777216)', 5885380: '[Supported] CUnit pointer to casting unit which irradiated this unit.', 5885384: '[Supported] Player ID who irradiated the unit.', 5885385: '[Supported] Detects if a unit have been infected with a parasite (*256).\n\nFlags connected to player ID. Value is a sum of:\nP1: 256\nP2: 512\nP3: 1024\nP4: 2048\nP5: 4096\nP6: 8192\nP7: 16384\nP8: 32768', 5885386: '[Supported] Counts/cycles up from 0 to 7 inclusive (*65536)', 5885387: '[Supported] Detects if a unit has been blinded (*16777216) by a medic.', 5885388: '[Supported] The remaining time that a unit has before Maelstorm wears off.\n', 5885389: '[Supported] Potentially from Valkyrie Afterburner or Ultralisk Roar.', 5885390: '[Supported] The amount of Acid Spores applied to a unit (*65536).\n\nThis value is incremented when a spore timer becomes non-0, and decremented when a spore timer becomes 0. It represents the extra damage (+1) and weapon cooldown (+12.5% per spore) inflicted on the current unit, and controls which overlay graphic to display and the green "Acid Spore (x)" rank string.\n\nArtificially decrementing this value can result in an underflow wrap-around to 255 if a spore timer subsequently decrements to 0. Unfortunately the code to remove the graphical overlay is tied to the last spore timer decrementing to 0, so simply setting this value back to 0 does not remove the graphical overlay. The best approach is to detect if the value is at least 10, then set the value to 1 and set sporeTimer[1] to 1, so that when it decrements the graphical overlay will be removed.', 5885391: '[See Description] [SCR: Other acid spore timers are NOT supported and give EUD errors on access]\n\nTimer for 1st of 9 acid spores applied to a unit (*16777216)\n\nInitialised to 150 (2,516,582,400). Timers decay 1 tick per 8 frames, so 150 / 2.9762 = 50.4 RL seconds on Fastest.\n\nThis is the timer for the first acid spore that hits a target, you can reduce the value and the spore will decay quickly as expected.\n\nWhen a 2nd spore is applied that timer is recorded separately and independently. The first spore will decay as per its timer and the 2nd one decays based on its timer.', 5885392: '[Unsupported] Timer for 2nd of 9 acid spores applied to a unit\n\nRefer to http://farty1billion.dyndns.org/EUDdb/?pg=entry&id=595', 5885393: '[Unsupported] Timer for 3rd of 9 acid spores applied to a unit (*256)\n\nRefer to http://farty1billion.dyndns.org/EUDdb/?pg=entry&id=595', 5885394: '[Unsupported] Timer for 4th of 9 acid spores applied to a unit (*65536)\n\nRefer to http://farty1billion.dyndns.org/EUDdb/?pg=entry&id=595', 5885395: '[Unsupported] Timer for 5th of 9 acid spores applied to a unit (*16777216)\n\nRefer to http://farty1billion.dyndns.org/EUDdb/?pg=entry&id=595', 5885396: '[Unsupported] Timer for 6th of 9 acid spores applied to a unit\n\nRefer to http://farty1billion.dyndns.org/EUDdb/?pg=entry&id=595', 5885397: '[Unsupported] Timer for 7th of 9 acid spores applied to a unit (*256)\n\nRefer to http://farty1billion.dyndns.org/EUDdb/?pg=entry&id=595', 5885398: '[Unsupported] Timer for 8th of 9 acid spores applied to a unit (*65536)\n\nRefer to http://farty1billion.dyndns.org/EUDdb/?pg=entry&id=595', 5885399: '[Unsupported] Timer for 9th of 9 acid spores applied to a unit (*16777216)\n\nRefer to http://farty1billion.dyndns.org/EUDdb/?pg=entry&id=595', 5885400: '(Unsupported?)\n\nCounts up for the number of bullets shot by a unit using this weapon behaviour and resets after it reaches 12 (bwapi)', 5885404: '(Unsupported?)\n\nPointer to AI class', 5885408: 'Unsupported', 5885410: 'Unsupported', 5885412: '(Unsupported?)\n\nPID+0 left\nPID+1 right\nPID+2 top\nPID+3 bottom', 5885428: 'Supported', 5885429: '[Supported] Updated when the air unit is being pushed (*256). Need more testing.\n\nSet entire Player ID to 0 to remove air repulsion for the CUnit.', 5885430: "[Supported] For air units when they're pushed (*65536) on X-axis.\n\nFormula from BWAPI: (mapsizex/1.5 max)\n\nNeed more testing.", 5885431: "[Supported] For air units when they're pushed (*16777216) on Y-axis.\n\nFormula from BWAPI: (mapsizex/1.5 max)\n\nNeed more testing.", 5887336: 'Who knows', 6456312: 'The value is pointer to the last unit in the unitNodeTable.\n-added by jehn', 6456368: '[Backed By Code] The value is pointer to the first unit in the unitNodeTable.', 6456376: '[Backed By Code] The address of the unit structure to be created\n-added by jehn', 6456392: "[Read Only] The position of the screen on the X Axis. Note that it's locked on an 8 pixel grid, so 2 would mean 16 pixel.", 6456432: "[Read Only] The position of the screen on the Y Axis. Note that it's locked on an 8 pixel grid, so 2 would mean 16 pixel.", 6456460: '[Read Only] Duplicate of screen coordinates?', 6456468: '[Backed By Code] Pointer to VX4 megatile buffer?', 6456488: '[Read Only] Duplicate of screen coordinates?', 6456504: '[Backed By Code] Selection group of the current player\n\nSeems to be duplicated at 0x59724C and 0x597208?', 6456552: "[Backed By Code] List of unit node pointers for Player's current group selection. Points to address 0x0059CCA8", 6456600: "[Backed By Code] List of unit node pointers for Player's current group selection.", 6456648: "[Backed By Code] List of unit node pointers for Player's current group selection.", 6456696: "[Backed By Code] List of unit node pointers for Player's current group selection.", 6456744: "[Backed By Code] List of unit node pointers for Player's current group selection.", 6456792: "[Backed By Code] List of unit node pointers for Player's current group selection.", 6456840: "[Backed By Code] List of unit node pointers for Player's current group selection.", 6456888: "[Backed By Code] List of unit node pointers for Player's current group selection.", 6462872: 'Supported', 6462876: 'Supported', 6462880: 'Supported', 6462882: 'Supported', 6462883: '[Supported] Index in the selection area at the bottom of the screen.', 6462884: '[Unsupported] Player bits indicating the visiblity for a player.\n\nP1: 1\nP2: 2\nP3: 4\nP4: 8\nP5: 16\nP6: 32\nP7: 64\nP8: 128', 6462885: 'Unsupported', 6462886: '[Unsupported] 0x01 - Draw selection circle\n0x02 - Ally selection?\n0x04 - Ally selection?\n0x08 - Draw HP bar\n0x10 -\n0x20 - Hidden\n0x40 - Burrowed\n0x80 - Iscript unbreakable code section', 6462887: 'Unsupported', 6462888: 'Unsupported', 6462890: 'Unsupported', 6462891: 'Unsupported', 6462892: '[Unsupported] 65536*Y + X', 6462896: '[Unsupported] Pointer to main CImage instance.', 6462900: '[Unsupported] Pointer to first CImage instance associated with this sprite.', 6462904: '[Unsupported] Pointer to last CImage instance associated with this sprite.', 6553416: 'Read-Only (Writing to it apparently does nothing :C .)', 6556452: '[Unsupported] Contains the tick count for when the message should disappear. Corresponds to the same index of game text.', 6556504: '[Simple Data] First line to be drawn on screen or written to.\n\nChanging this value to 11 or 12 and then doing a Display Text action will allow displaying a status message.', 6556512: '[Backed By Code] Line IDs:\n0-10: display text lines (first line defined by 0x640B58 - Next Display Text Line)\n11: ?\n12: status message', 6621568: 'Wait action timers for each player', 6621600: "[Simple Data] When this value reaches 0, trigger loop executes.\n\nPreserve to 0 for single-tick hypers, or 1 for traditional hyper triggers (2 ticks).\n\nWait(n) will make this value 1 after ceil(n / 'ms per tick') + 1, so Wait(0) makes this value to 1, making the trigger loop execute every 2 ticks.", 6621616: '[Simple Data] Used to dynamically run EUDs or dereference pointers.\n\nSets "Current Player" in triggers to be a reference to a different base address for the deaths table.\n\ne.g.\nSet Deaths("Int:203155", "Terran Marine", Set to, EPD);\nSet Deaths("Int:203155", "Terran Marine", Add/Subtract, whatever);\nSet Deaths("Current Player", "Terran Marine", Set to/Add/Subtract, whatever);\n\n\nExample: Implement Set Minerals for current player\n// Add -11421 to 0x006509B0 (player ID corresponding to 0x0057F0F0)\nSetMemory(0x6509B0, Add, 0xFFFFD363);\n// Add 50 to byte offset for that address -- current player will increase target address by 4 bytes for each player that runs it\nSetDeaths(CurrentPlayer, Add, 50, "Terran Marine");\n// Add +11421 to 0x006509B0 to set it back to what it was\nSetMemory(0x6509B0, Add, 0x00002C9D);\n\n\nExample: Implement a SetKills action for Current Player\n// Add -2736 to 0x6509B0 (player ID corresponding to 0x005878A4)\nSetMemory(0x6509B0, Add, 0xFFFFF550);\n// Current player combined with unit ID now references the correct target address in the Kills table)\n// This SetDeaths is now really SetKills to add/subtract/set to for unit of choice\nSetDeaths(CurrentPlayer, Subtract, 1, "Terran Ghost");\n// Add +2736 to 0x006509B0 to set it back to what it was\nSetMemory(0x6509B0, Add, 0x00000AB0);\nNote: Set Deaths needs to be for current player, P1/P2/etc. would modify the normal deaths table.\nNote2: Cannot use Any Unit/Men/Buildings/Factories for the unit, those do have Unit IDs, are not stored in the Kills table, and would overflow into other areas.', 6637696: '[Backed By Code] Game Command Queue. See https://github.com/phu54321/vgce/blob/master/docs/Blizzard/Starcraft/packets2.txt\nAlso https://github.com/bwapi/bwapi/blob/main/bwapi/BWAPI/Source/BW/OrderTypes.cpp\nNot sure if the size is 496, the value in 0x0057F0D8\nEdited by PereC, 2021.04.03\n', 6638240: '[Supported] Command queue (0x00654880) space used.\nEdited by PereC, 2021.04.03', 6641376: '[Unsupported] If 1, commands are accepted.\nIf 0, all commands are ignored.', 6641408: 'Simple Data', 6641472: '[Simple Data] Address 0x00655740 - Upgrade ID 000 - bit-mask 0x0000FFFF\nAddress 0x00655740 - Upgrade ID 001 - bit-mask 0xFFFF0000\nAddress 0x00655744 - Upgrade ID 002 - bit-mask 0x0000FFFF\nAddress 0x00655744 - Upgrade ID 003 - bit-mask 0xFFFF0000\netc.', 6641600: 'Simple Data', 6641728: 'Simple Data', 6641856: 'Simple Data', 6641984: 'Simple Data', 6642112: 'Simple Data', 6642240: '[Simple Data] stat_txt.tbl index', 6642368: '[Simple Data] cmdicons.grp frame', 6642492: 'Simple Data', 6642560: 'Simple Data', 6642684: '[Simple Data] 0 = Zerg\n1 = Terran\n2 = Protoss\n3 = All', 6642776: '[Backed By Code] 1-based reference to portdata.tbl', 6643328: '[Backed By Code] 1-based reference to portdata.tbl', 6644120: 'Simple Data', 6644208: '[Simple Data] Address 0x006561F0 - Tech ID 000 - bit-mask 0x0000FFFF - *1\nAddress 0x006561F0 - Tech ID 001 - bit-mask 0xFFFF0000 - *65536\nAddress 0x006561F4 - Tech ID 002 - bit-mask 0x0000FFFF - *1\nAddress 0x006561F4 - Tech ID 003 - bit-mask 0xFFFF0000 - *65536', 6644296: '[Simple Data] Address 0x00656248 - Tech ID 000 - bit-mask 0x0000FFFF - *1\nAddress 0x00656248 - Tech ID 001 - bit-mask 0xFFFF0000 - *65536\nAddress 0x0065624C - Tech ID 002 - bit-mask 0x0000FFFF - *1\nAddress 0x0065624C - Tech ID 003 - bit-mask 0xFFFF0000 - *65536', 6644384: '[Simple Data] stat_txt.tbl index', 6644472: 'Simple Data', 6644560: '[Simple Data] DatEdit says Unused?', 6644608: 'Simple Data', 6644696: 'Simple Data', 6644784: '[Simple Data] cmdicons.grp frame index', 6644872: '[Simple Data] 0 = Zerg\n1 = Terran\n2 = Protoss\n3 = All', 6644916: 'Simple Data', 6644960: 'Simple Data', 6645096: '[Simple Data] stat_txt.tbl index', 6645360: "[Simple Data] 0 = Fly & Don't Follow Target\n1 = Fly & Follow Target\n2 = Appear on Target Unit\n3 = Persist on Target Site\n4 = Appear on Target Site\n5 = Appear on Attacker\n6 = Attack & Self-Destruct\n7 = Bounce\n8 = Attack Target 3x3 Area\n9 = Go to Max. Range", 6645496: '[Simple Data] 0 = None\n1 = Normal Hit\n2 = Splash (Radial)\n3 = Splash (Enemy)\n4 = Lockdown\n5 = Nuclear Missile\n6 = Parasite\n7 = Broodlings\n8 = EMP Shockwave\n9 = Irradiate\n10 = Ensnare\n11 = Plague\n12 = Stasis Field\n13 = Dark Swarm\n14 = Consume\n15 = Yamato Gun\n16 = Restoration\n17 = Disruption Web\n18 = Corrosive Acid\n19 = Mind Control\n20 = Feedback\n21 = Optical Flare\n22 = Maelstrom\n23 = Unused (Crash)\n24 = Splash (Air)', 6645632: '[Simple Data] cmdicons.grp frame', 6645644: "(What's this?)", 6645896: 'Simple Data', 6646160: '[Simple Data] "Angle within which the weapon can be fired without waiting for the unit\'s graphics to turn. 128 = 180 degrees."', 6646296: '[Simple Data] 16 times the value in DatEdit.', 6646816: 'Simple Data', 6646952: '[Simple Data] Flingy.dat index\nWeapon Graphic', 6647472: 'Simple Data', 6647736: 'Simple Data', 6647872: '[Simple Data] "Time until the weapon is removed if it does not hit a target."', 6648008: 'Simple Data', 6648272: '[Simple Data] Upgrades.dat index', 6648408: '[Simple Data] 0 = Independent\n1 = Explosive\n2 = Concussive\n3 = Normal\n4 = Ignore Armor', 6648544: '[Simple Data] stat_txt.tbl index', 6648808: '[Simple Data] Reference only?', 6648944: '[Simple Data] Value is 16 times what DatEdit shows.', 6649464: 'Simple Data', 6649728: 'Simple Data', 6649992: 'Simple Data', 6650128: 'Simple Data', 6650264: '[Simple Data] 0x001 Air\n0x002 Ground\n0x004 Mechanical\n0x008 Organic\n0x010 non-Building\n0x020 non-Robotic\n0x040 Terrain\n0x080 Organic or Mechanical\n0x100 Own\n\nThis is actually better thought of "which units can this weapon deal damage to". Eg if you give a ground weapon the air + ground target as well as splash, then when it attacks a ground unit, any air units in the vicinity will also take splash damage. If you also set it to have Mechanical targeting, then the weapon will be able to attack all types of ground units, but only deal damage to ones with the mechanical flag.', 6650524: '[Simple Data] Darkens the screen without affecting UI elements. Appears to be a modifier for Fog of War Masks? Technically a 1 byte value, but the high bytes are padding and not used.\n\nValid values are 0-31, with 0 being black and 31 being maximum brightness. Values >31 appear to just be black.\n\nThe value appears to be the index in tileset\\*\\dark.pcx remapping palette.', 6650528: '[Backed By Code] Sets the brightness parts of the fog of war masks. Corresponds to dark.pcx indexes, with valid values from 0 (black) to 31 (full brightness). Values >31 in 1.16.1 are glitched colors.\n\n4 bytes at 0x00657AA0 correspond to unexplored fog.\n4 bytes at 0x0065825C correspond to explored areas in fog.\n4 bytes at 0x00658A9C correspond to visible areas.\nOther addresses relate to the transitions between these areas.\n\nSetting to 0x1F1F1F1F will fully clear the mask, though units and buildings may not be visible or selectable depending on the actual fog state. Additionally, using different values for each byte, e.g. 0x1F001F00, will create vertical stripes (tested in 1.16.1).', 6683672: '[Simple Data] This value is for statistics purposes only (?)', 6683904: 'Simple Data', 6684360: 'Simple Data', 6684592: '[Simple Data] sfxdata.dat start index', 6685048: '[Simple Data] "AI Internal" in DatEdit', 6685280: "[Simple Data] If this property is different from 0, the unit's name will be read from the strings stored within the map (CHK) that is currently loaded, instead of the stat_txt.tbl file.", 6685736: 'Simple Data', 6686192: '[Simple Data] "Direction unit will face after it is created. Values start at 0 (the unit will face the top of the screen) and go on clockwise through subsequent turning stages until 31 (unit will face a little left from the complete turn). Value of 32 means unit will face a random direction." -DatEdit', 6686424: 'Simple Data', 6686656: '[Simple Data] 228 = None', 6687112: 'Simple Data', 6687344: '[Simple Data] u16 index of 0x00514178\n(address is 0x00514178 + 2*this value)', 6687800: '[Simple Data] Unused.', 6688256: 'Simple Data', 6688712: 'Simple Data', 6688944: '[Simple Data] 0 = No graphics', 6689856: '[Simple Data] sfxdata.dat end index', 6690072: '[Simple Data] 0x0001 - Non-Neutral\n0x0002 - Unit Listing & Palette\n0x0004 - Mission Briefing\n0x0008 - Player Settings\n0x0010 - All Races\n0x0020 - Set Doodad State\n0x0040 - Non-Location Triggers\n0x0080 - Unit&&Hero Settings\n0x0100 - Location Triggers\n0x0200 - BroodWar Only', 6690528: '[Simple Data] Weapons.dat index', 6690760: '[Simple Data] Struct:\n2 bytes - Left Dimension (from center)\n2 bytes - Up Dimension\n2 bytes - Right Dimension\n2 bytes - Down Dimension', 6692584: '[Simple Data] sfxdata.dat end index', 6692800: '[Simple Data] sfxdata.dat index', 6693016: '[Simple Data] 0 = No commands/Auto Attack\n1 = Normal movement/Normal Attack\n2 = Normal movement/No Attack\n3 = No movement/Normal Attack\n4 = Harvest\n5 = Harvest&Repair\n6 = Nothing (with indicator)\n(I think)', 6693248: '[Simple Data] 0 = Independent\n1 = Small\n2 = Medium\n3 = Large', 6693480: '[Simple Data] "Human Idle Action" in DatEdit\nOrders.dat index', 6693712: '[Simple Data] Lowest byte is fractional part (*256)', 6694624: '[Simple Data] Struct:\n2 bytes - X Pos\n2 bytes - Y Pos\n\nOnly exists for buildings (First entry is 106 Command Center)', 6695008: "[Simple Data] Struct:\n2 bytes - Width\n2 bytes - Height\n\nSetting to 0 will make the unit (not just buildings) invisible:\n- It won't appear on the minimap\n- It won't appear on the main map\n- It can't be selected by the mouse in any way\n- 'Bring' triggers will not locate it\n- Units can still attack (and will display missile graphics)\n- Units still cause and are affected by collision\n- Units can't be targetted by other units\n\nThis dimension is used when determining if units with the Building flag can fit in the available spaace. Units without the Building flag will rely on their collision dimensions instead.\n\nSetting this to a size of 31x31 or smaller will allow buildings to be built on any terrain, including water and cliffs, although the placement mechanics are a little wonky.", 6695920: '[Simple Data] sfxdata.dat end index', 6696376: "[Simple Data] 1 range unit here = 2 range units in Weapons.dat.\nIf the value is 0 in DatEdit, here it will be half of Max Range in the unit's weapon range.", 6696608: '[Simple Data] "Computer Idle" in DatEdit\nOrders.dat index', 6696840: '[Simple Data] 0xFFFF = No Portrait', 6697296: '[Simple Data] Elevation Level', 6697528: '[Simple Data] Set value from 0-11.  Values greater than 11 will crash.\n\nExample: Setting SCV Sight Range to 5.\n\nBase Address = 0x00663238\nSCV Units.dat Index = 0x7\n\n0x00663238 + 0x7 = 0X66323F\n\n0x0066323F is not divisible by 4, next lowest multiple of 4 is 0x0066323C\nWent down 3 bytes to get from 0x0066323F to 0x0066323C\nTherefore, need to modify 0xFF000000 at 0x0066323C to the change value at 0x0066323F\n\n// set SCV sight range to 5\nMasked MemoryAddr(0x0066323C, Set To, 0x05000000, 0xFF000000);', 6697760: '[Simple Data] Orders.dat reference', 6697992: 'Simple Data', 6698448: '[Simple Data] Upgrades.dat index', 6698680: '[Simple Data] weapons.dat reference', 6698912: '[Simple Data] 0x01 - Zerg (Uses underlings, can build on creep)\n0x02 - Terran (Uses Supply, has sublabel, buildings will burn)\n0x04 - Protoss (Uses Psi)\n0x08 - Men\n0x10 - Building\n0x20 - Factory\n0x40 - Independent\n0x80 - Neutral\n\nExample:\nSet Protoss Observatory as Terran and Unset Protoss so it will burn and can be repaired.\nProtoss Observatory Units.dat Index = 159 = 0x9F\n0x006637A0 + 0x9F = 0x0066383F\n0x0066383F is not divisible by 4, next lowest multiple of 4 = 0x0066383C\nTherefore, modify 0xFF00000 at 0x0066383C to hit 0x0066383F\n// set Protoss Observatory Terran\nMemoryAddr(0x0066383C, Add, 0x02000000);\n// unset Protoss Observatory Protoss\nMemoryAddr(0x0066383C, Subtract, 0x04000000);', 6699144: 'Simple Data', 6699600: '[Simple Data] Orders.dat index', 6699832: '[Simple Data] sfxdata.dat start index', 6700048: '[Simple Data] sfxdata.dat start index', 6700264: '[Simple Data] Value here is twice what you see in-game. (Hence why 2 Zerglings = 1 Underling)', 6700496: '[Simple Data] "Controls ground units movement: units with lower Rank will stop and wait to allow units with higher Rank to continue movement."\n\nFor Terran Units this shows a stat_txt string (starting at index 550).', 6700728: '[Simple Data] Kill Score', 6701184: '[Simple Data] 0x00000001 - Building\n0x00000002 - Addon\n0x00000004 - Flyer\n0x00000008 - Worker\n0x00000010 - Subunit\n0x00000020 - Flying Building\n0x00000040 - Hero\n0x00000080 - Regenerates HP\n0x00000100 - Animated Idle(?)\n0x00000200 - Cloakable\n0x00000400 - Two Units in 1 Egg\n0x00000800 - Single Entity\n0x00001000 - Resource Depot\n0x00002000 - Resource Container\n0x00004000 - Robotic Unit\n0x00008000 - Detector\n0x00010000 - Organic Unit\n0x00020000 - Requires Creep\n0x00040000 - Unused(?)\n0x00080000 - Requires Psi\n0x00100000 - Burrowable\n0x00200000 - Spellcaster\n0x00400000 - Permanent Cloak\n0x00800000 - Pickup Item(?)\n0x01000000 - Ignore Supply Check\n0x02000000 - Use Medium Overlays\n0x04000000 - Use Large Overlays\n0x08000000 - Battle Reactions\n0x10000000 - Full Auto-Attack\n0x20000000 - Invincible\n0x40000000 - Mechanical Unit\n0x80000000 - Produces Units(?)', 6702096: 'Simple Data', 6702328: '[Backed By Code] flingy.dat index', 6702560: '[Simple Data] This value is for statistics purposes only (?)', 6702792: '[Simple Data] The value is twice what you see in-game.', 6703024: '[Simple Data] Example: Unset "has shields" for Protoss Observatory\n\nBase Address = 0x006647B0\nProtoss Observatory Units.dat Index = 159 = 0x9F\n\n0x006647B0 + 0x9F = 0x0066484F\n\n0x0066484F is not divisible by 4, next lowest multiple of 4 = 0x0066484C\nWent down by 3 bytes to reach the multiple of 4\n\nTherefore, modify 0xFF00000 at 0x0066484C to change value at 0x0066484F\n\n// set observatory "has shields" to 0\nMasked MemoryAddr(0x0066484C, Set To, 0, 0xFF000000);', 6703256: '[Simple Data] "Return to Idle" in DatEdit\nOrders.dat index', 6703488: '[Simple Data] Only exists for buildings (First entry is 106 Command Center)', 6703680: 'Simple Data', 6703872: 'Simple Data', 6704064: 'Simple Data', 6704256: 'Simple Data', 6704448: '[Simple Data] 0 = Initial\n1 = Death\n2 = Ground Attack - Initial\n3 = Air Attack - Initial\n4 = Unused1\n5 = Ground Attack - Repeat\n6 = Air Attack - Repeat\n7 = Cast Spell\n8 = Return to Idle from Ground Attack\n9 = Return to Idle from Air Attack\n10 = Unused2\n11 = Walking\n12 = Return to Idle from Walking\n13 = Special State 1 (Bouncing Animation)\n14 = Special State 2\n15 = Almost Built\n16 = Built\n17 = Landing\n18 = Lift-Off\n19 = Building Is Working\n20 = Return to Idle from Working\n21 = Warp In\n22 = Unused 3\n23 = Initial (StarEdit only)\n24 = Disable\n25 = Burrow\n26 = UnBurrow\n27 = Enable\n28 = No Animation', 6704640: '[Simple Data] Techdata.dat index for energy', 6704832: '[Simple Data] cmdicons.grp frame index or 0xFFFF for none.', 6705216: 'Simple Data', 6705408: 'Simple Data', 6705600: 'Simple Data', 6705792: "[Simple Data] Doesn't do anything.", 6706176: '[Simple Data] Orders.dat index\n"Order to be run if the target is obscured by the Fog-of-War."', 6706368: 'Simple Data', 6706560: 'Simple Data', 6706944: 'Simple Data', 6707136: 'Simple Data', 6707328: '[Simple Data] Weapons.dat index\n"Weapon used by the order to determine the targeting rules, if "Use Weapon Targeting" is checked."', 6707520: '[Simple Data] Order goes in bSecondaryOrderID instead of bMainOrderID.', 6707712: 'Simple Data', 6707904: '[Read Only] Images.dat reference starting at index 561.\nStarts on sprites.dat entry 130.', 6708296: 'Simple Data', 6708816: '[Read Only] Starts on Sprites.dat ID 130.', 6709208: '[Read Only] Starts on Sprites.dat ID 130.', 6709600: '[Backed By Code] Images.dat index', 6710640: '[Simple Data] Unknown flag.', 6711160: '[Read Only] images.tbl lo? index', 6715160: 'Simple Data', 6716160: '[Read Only] Images.tbl lo? index', 6720160: '[Read Only] Images.tbl grp index', 6724160: "[Simple Data] 0 - normal\n1 - doesn't draw hallucination\n2 - non-vision cloaking\n3 - non-vision cloaked\n4 - non-vision uncloaking\n5 - vision cloaking\n6 - vision cloaked\n7 - vision uncloaking\n8 - EMP\n9 - uses remapping\n10 - shadow\n11 - HP bar\n12 - warp texture\n13 - selection circle remapping\n14 - draw original player color (used for flags -- player color stored in coloring data)\n15 - draw update rect\n16 - hallucination\n17 - warp flash", 6725160: '[Backed By Code] If Drawing Function is 9:\n0 = No remapping\n1 = ofire.pcx (Orange)\n2 = gfire.pcx (Green)\n3 = bfire.pcx (Blue)\n4 = bexpl.pcx (Blue2)\n5 = Special (Own cloak)\n6 = (crash)\n7 = (crash)\n8 = Unk8 (?)\n9 = Unk9 (?)', 6726160: '[Read Only] Images.tbl lof pointer', 6730160: '[Read Only] images.dat lo? index', 6734160: 'Simple Data', 6735160: '[Read Only] None = 0\nSmall = 133\nMedium = 2\nLarge = 184', 6739160: 'Simple Data', 6740160: '[Read Only] images.tbl lod index', 6744160: 'Simple Data', 6745160: '[Backed By Code] Iscript.bin ID', 6865156: 'Backed By Code', 6865160: 'Backed By Code', 6865220: '[Simple Data] Can be used to check if send message box is open (At Least 1)', 6865228: "[Simple Data] The button set ID of the currently selected single unit. There is a 1-to-1 relationship between unit ID and it's button set, eg the buttonset for terran ghost is ID 1.\n\nThere are also several group buttonsets, for when multiple workers, or burrowable, or cloakable units etc selected:\n* 244 - generic units, shows move/stop/attack/guard/patrol buttons\n* 245 - workers, shows move/stock/attack + gather and return resources buttons\n* 246 - cloakable units, as per 'generic' + cloak/decloak buttons\n* 247 - burrowable units, as per 'generic' + burrow/unburrow buttons\n\nRefer to button tabs in Firegraft.\n\nThrough experimentation, buttons occasionally have a delay of up to 2-3 seconds before changes in game state will update the button status (eg when a new tech is available, a button that relies on that tech may stay greyed out for 2-3 seconds). Setting this address with a different value (eg 244) is a way to force a refresh for the currently displayed button set.\n\nNote that SC constantly updates this address to reflect the current unit's actual button set, to prevent units from being able to action commands that they shouldn't have access to (the infamous 1.13 patch series to stop any building from making any unit).", 6865396: "[Backed By Code] Overwriting a particular unit's frame offset with a different frame offset can change the image used for that unit.\n\nGRP header:\nu16 frameCount\nu16 width\nu16 height\n\nGRP Frame (* frameCount)\nu8 x\nu8 y\nu8 w\nu8 h\nu32 offset", 6865404: "[Backed By Code] Overwriting a particular unit's frame offset with a different frame offset can change the image used for that unit.\n\nGRP header:\nu16 frameCount\nu16 width\nu16 height\n\nGRP Frame (* frameCount)\nu8 x\nu8 y\nu8 w\nu8 h\nu32 offset", 6865412: "[Backed By Code] Overwriting a particular unit's frame offset with a different frame offset can change the image used for that unit.\n\nGRP header:\nu16 frameCount\nu16 width\nu16 height\n\nGRP Frame (* frameCount)\nu8 x\nu8 y\nu8 w\nu8 h\nu32 offset", 6865992: 'Unknown 4', 6867136: 'Value is some combination of:\n- 1 preload\n- 2 unitSpeech\n- 16 oneAtTime\n- 32 neverPreempt', 6868280: 'Unknown 3', 6870568: 'Unknown 1', 6871712: "Direct pointer to SFXData.tbl string. This can be changed as long as the wav hasn't been loaded. This means that any wav without the 'preload' flag should be able to be pointed to a different wav file.", 7116888: '[Simple Data] 0 = Flingy.dat Control\n1 = Partially Mobile, Weapon\n2 = Iscript.bin Control', 7117104: '[Simple Data] Measured in pixels*256', 7117944: '[Simple Data] Measured in pixels-per-frame.', 7118368: 'Simple Data', 7118584: '[Simple Data] Measured in pixels-per-frame, but written as "Speed*(320/3)"', 7119424: '[Simple Data] Unused in DatEdit', 7119640: '[Simple Data] Sprites.dat index', 7121229: 'The current HP of the selected unit.', 7121392: '[Unsupported] Set value to 1 to detect any unit currently being trained on any building.\n\nNot fully tested.', 7134656: '[Simple Data] 2: Left button pressed. 8: Right button pressed. 32: Middle button pressed\nEdited by PereC, 2021.03.29', 7134660: '[Simple Data] Relative to the screen.', 7134664: '[Simple Data] Relative to the screen.', 7135188: '[Backed By Code] The current game speed. The values are as follows:\n\n0 = Slowest\n1 = Slower\n2 = Slow\n3 = Normal\n4 = Fast\n5 = Faster\n6 = Fastest\n\nNote:\nSC:R no longer uses this address. The value is always 0 in SC:R.', 7135200: '[Backed By Code] 0-100 for music volume\nNote:\nSC:R no longer uses this address. The value is always 0 in SC:R.', 7135204: '[Backed By Code] 0-100 for sound volume\nNote:\nSC:R no longer uses this address. The value is always 0 in SC:R.', 7146600: '[Unsupported] Pointer to the u16 buffer that stores the tile IDs of tiles overwritten by creep in the Active Map Tile buffer. Values are normally 0 until a creep tile replaces them.', 7146604: '[Unsupported] Copy of Map Height?', 7146608: "[Unsupported] 0x006D0C70 -> 0x0047E2D0 -- refreshes map tiles for drawing?\n0x006D0C74 -> isCreepCovered -- checks if a tile is creep\n0x006D0C78 -> isTileVisible -- checks if a player can see the tile\n0x006D0C7C -> null pointer? -- I couldn't find what function is actually put here\n\n", 7147136: '[Unsupported] Pointer to u8 flags relating to the creep overlay for each map tile.', 7147140: '[Unsupported] Pointer to u16 array of active map tiles.', 7147272: '[Unsupported] Copy of Map Width', 7147312: 'Read Only', 7147313: 'Read Only', 7147317: 'Read Only', 7147319: '[Read Only] struct gameSeed', 7147320: '[Read Only] struct gameSeed. Unix time on game start.(The number of seconds that have elapsed since 00:00:00 UTC on 1 January 1970)', 7147324: '[Read Only] struct gameSeed', 7147332: '[Read Only] struct networkGameHeader', 7147336: '[Read Only] 게임 제목?\n"This is the name that the host has chosen when creating the game."\n\nstruct networkGameHeader\n', 7147360: '[Read Only] struct networkGameHeader', 7147364: '[Read Only] 2Byte MapWidth\n2Byte MapHeight\n\nstruct networkGameHeader', 7147368: '[Read Only] struct networkGameHeader', 7147369: '[Read Only] struct networkGameHeader', 7147370: '[Read Only] struct networkGameHeader', 7147371: '[Read Only] struct networkGameHeader', 7147372: '[Read Only] struct networkGameHeader', 7147373: '[Read Only] struct networkGameHeader', 7147374: '[Read Only] struct networkGameHeader', 7147376: '[Read Only] struct networkGameHeader', 7147380: '[Read Only] struct networkGameHeader', 7147382: '[Read Only] struct networkGameHeader', 7147383: '[Read Only] struct networkGameHeader', 7147384: '[Read Only] struct networkGameHeader', 7147409: '[Read Only] struct networkGameHeader', 7147441: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147442: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147443: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147445: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147447: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147449: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147450: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147451: '[Read Only] boolean\n\nstruct networkGameHeader.gameTemplateInfo', 7147452: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147453: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147454: '[Read Only] boolean\n\nstruct networkGameHeader.gameTemplateInfo', 7147455: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147456: '[Read Only] boolean\n\nstruct networkGameHeader.gameTemplateInfo', 7147457: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147458: '[Read Only] boolean\n\nstruct networkGameHeader.gameTemplateInfo', 7147459: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147460: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147464: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147468: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147472: '[Read Only] struct networkGameHeader.gameTemplateInfo', 7147473: "[Read Only] Unfortunately this struct is not dword-aligned.\n\n+0 - u32 slot (0x006D0FD1)\n+4 - u32 storm ID (0x006D0FD5)\n+8 - u8 type (0x006D0FD9)\n+9 - u8 race (0x006D0FDA)\n+A - u8 team (0x006D0FDB)\n+B - char name[25] (0x006D0FDC)\n\nFor next player add 9 player ID's.", 7147905: 'Read Only', 7147937: 'Read Only', 7148032: 'Backed By Code', 7148088: 'Backed By Code', 7148128: '[Backed By Code] Pointer to (Map Width)x(Map Height) array of u32 flags:\n0x000000xx - Visibility Flags -- bits correspond to each player\n0x0000xx00 - Explored Flags -- bits correspond to each player\n0x00010000 - Walkable\n0x00020000 - Unused?\n0x00040000 - Unwalkable\n0x00080000 - Unused?\n0x00100000 - Unused?\n0x00200000 - Unused?\n0x00400000 - Has Creep\n0x00800000 - Unbuildable (i.e., water tiles)\n0x01000000 - Low Ground\n0x02000000 - Med Ground\n0x04000000 - High Ground\n0x08000000 - Occupied (i.e. contains a building)\n0x10000000 - Creep Receeding\n0x20000000 - Cliff Edge\n0x40000000 - Temporary Creep\n0x80000000 - Unused?\n\nTaken from: https://github.com/bwapi/bwapi/blob/master/bwapi/BWAPI/Source/BW/Structures.h#L80', 7166572: "[Simple Data] Setting cheat flags will work in multiplayer games, but maybe not as expected.\n\n00000001 **Black Sheep Wall\n00000002 Operation CWAL\n00000004 Power Overwhelming\n00000008 *Something For Nothing\n00000010 *Show Me The Money\n00000040 Game Over Man\n00000080 There Is No Cow Level\n00000100 Staying Alive\n00000200 Ophelia\n00000800 The Gathering\n00001000 Medieval Man\n00002000 Modify The Phase Variance\n00004000 **War Aint What It Used To Be\n00020000 Food For Thought\n00040000 *Whats Mine Is Mine\n00080000 *Breathe Deep\n20000000 noglues\n\n* If any of these are enabled and you use any cheat it will instead disable these and do their action (and since you can't use cheats in multiplayer they are useless there.)\n** If you enable these in Multiplayer they will be automatically disabled.\n28000200 - These flags apparently do not clear at the start of a game.\nRadio Free Zerg doesn't use these flags.", 7166896: 'Change this value and toggle music and it will play a different sound track.\n0 = Off\n1 = Zerg 1\n2 = Zerg 2\n3 = Zerg 3\n4 = Terran 1\n5 = Terran 2\n6 = Terran 3\n7 = Protoss 1\n8 = Protoss 2\n9 = Protoss 3\n10 = Zerg Briefing Room\n11 = Terran Briefing Room\n12 = Protoss Briefing Room\n13 = Zerg Defeat\n14 = Terran Defeat\n15 = Protoss Defeat\n16 = Zerg Victory\n17 = Terran Victory\n18 = Protoss Victory\n19 = Zerg Victory\n20 = Terran Victory\n21 = Protoss Victory\n22 = Title/Menu Music\n23 = Terran 2 (Credits?)\n24 = Radio Free Zerg\nOthers crash.', 7166910: 'Minimap State -\nPressing Tab, Shift+tab changes this 0x00 - default\n0x01 - Enemies red, allies yellow\n0x02 - Enemies red, allies yellow, ememy units red, ally units yellow, your units teal', 7167688: 'Backed By Code', 352708208: 'Read Only', 419717432: 'Simple Data', 419717436: 'Simple Data'};